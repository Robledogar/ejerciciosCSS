* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	font-size: 1.2rem;
	min-height: 100%; /* Esto sirve para que ocupe, como mínimo todo el height del dispositivo */
	margin: 10px;
}

html {
	height: 100%; /* Esto sirve para que ocupe, como mínimo todo el height del dispositivo */
}

.grid-container > * {/* de esta forma se aplicarán estos estilos a todos los hijos */
	box-shadow: -1px 1px 7px 0px rgba(0, 0, 0, 0.75);
	border-radius: 4px;
	padding: 10px;
	text-align: center;
}


.header {
	grid-area: header; /* le asignamos una de las areas creadas previamente */
	background-color: lightblue;
}

.navbar {
	grid-area: navbar;
	background-color: lightgreen;
}

.sidebar {
	grid-area: sidebar;
	background-color: lightcoral;
}

.main {
	grid-area: main;
	background-color: lightgrey;
}

.footer {
	grid-area: footer;
	background-color: lightslategrey;
}


.grid-container {
	display: grid;
	gap: 10px;
	grid-template: /* aqui definimos las areas que tendrá nuestra maquetación (pueden tener cualquier nombre diferente al del html*/
	"header"  100px
	"navbar"  50px
	"main"    auto
	"sidebar" 100px
	"footer"  100px;
}


@media (min-width: 600px) { /* cuando llegue al mínimo de 600px, se aplicará lo de dentro */
	.grid-container {
		/*grid-template-columns: 200px auto; (Forma menos elegante de hacer lo mismo)
		grid-template-rows: 100px 50px auto 100px;
		grid-template-areas: 
	"header header" 
	"navbar navbar" 
	"sidebar main" 
	"footer footer";*/

	grid-template: /*Forma mucho más óptima*/
	"header header" 100px /* podemos sustituir una de las areas por . y así aparecerá vacía */
	"navbar navbar" 50px
	"sidebar main"  auto
	"footer footer" 100px 
	/ 200px auto;
	}
}


@media (min-width: 900px) {
	.grid-container {
		grid-template: 
		"header header header" 100px
		"navbar main sidebar"  auto
		"footer footer footer" 100px 
		/ 200px  auto   200px; 
	}
}










